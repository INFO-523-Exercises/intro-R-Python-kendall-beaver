---
title: "Intro to R/Python"
author: "Kendall Beaver"
format: html
editor: visual
---

```{r}
R.version

help(package="DMwR2")

library(DMwR2)

data(algae)

algae

manyNAs(algae)

library()

(.packages())

library (dbplyr)

(.packages())

detach("package:dbplyr", unload=TRUE)

(.packages())

library(dplyr)

installed.packages()

old.packages()

update.packages()

update.packages(ask = FALSE)

mean

help("mean")

RSiteSearch('neural networks')

save.image()

getwd()

setwd("C:/Users/ual-laptop/Documents/GitHub/intro-R-Python-kendall-beaver")

getwd()

vat <- 0.2

vat

(vat <- 0.2)

x <- 5
y <- vat * x
y

z <-(y/2)^2

y

z

ls()

objects()

rm(vat)

max(4, 5, 6, 12, -4)

mean(4, 5, 6, 12, -4)

max(sample(1:100, 30))

mean(sample(1:100, 30))

set.seed(1)

rnorm(1)

rnorm(1)

set.seed(2)

rnorm(1)

rnorm(1)

exists("se")

se <- function(x){
  variance <- var(x)
  n <-length(x)
  return (sqrt(variance/n))
}

exists("se")

convMeters <- function (x, to="inch"){
  factor = switch(to, inch=39.3701, foot=3.28084, yard=1.09361, mile=0.000621371, NA)
  if(is.na(factor)) stop ("unknown target unit")
  else return (x*factor)
}

convMeters(23, "foot")

convMeters(40)

convMeters(56.2, "yard")

convMeters(to="yard", 56.2)

g <-c('f', 'm', 'f', 'f', 'f', 'm', 'm', 'f')

g <- factor(g)

other.g <-factor(c('m', 'm', 'm', 'm'), levels= c('f', 'm'))

other.g

other.g <-factor(c('m', 'm', 'm', 'm'))

other.g

g <- factor(c('f', 'm', 'f', 'f', 'f', 'm', 'm', 'f'))

table(g)

a <- factor(c('adult', 'juvenile','adult', 'juvenile','adult', 'juvenile','juvenile', 'juvenile'))

table(a, g)

a <- factor(c('adult', 'juvenile','adult', 'juvenile','adult', 'juvenile','juvenile'))

a <- factor(c('adult', 'juvenile','adult', 'juvenile','adult', 'juvenile','juvenile', 'juvenile'))

t <- table(a, g)

t

margin.table(t, 1)

margin.table(t, 2)

t

prop.table(t, 1)

prop.table(t, 2)

prop.table(t)

prop.table(t) * 100

v <- c(2, 5, 3, 4)

v

length(v)

mode(v)

v <- c(2, 5, 3, 4, 'me')

mode(v)

v

v <- c(2, 5, 3, 4, NA)

mode(v)

v

b <- c(TRUE, FALSE, NA, TRUE)

mode(b)

b

b[3]

b[3] <- TRUE

b

b[10] <- FALSE

b

e <-vector()

mode(e)

e <- c()

mode(e)

length(e)

b2 <-c(b[1], b[3], b[5])

b2

sqrt(v)

v1 <- c(3, 6, 9)
v2 <- c(1, 4, 8)
v1+v2

v1*v2

v1-v2

v1/v2

v3 <- c(1, 4)

v1+v3

2*v1

mysum <- function (x){
  sum <- 0
  for(i in 1:length(x)){
    sum <- sum + x[i]
  }
  return (sum)
}

(mysum (c(1, 2, 3)))

(x <-1:10)

(x <-10:1)

10:15-1

10:(15-1)

(seq(from=1, to=5, length=4))

(seq(length=10, from=-2, by=0.5))

(rep(5, 10))

(rep("hi", 3))

(rep(1:2, 3))

gl(3, 5)

gl(2, 5, labels= c('female', 'male'))

gl(2, 1, 20, labels=c('female', 'male'))

n <- rep(1:2, each=3)

(n <- factor(n, 
             levels = c(1, 2),
             labels = c('female','male')
             ))

n

(rnorm(10, mean=10, sd=3))

(rt(10, df=5))

exercise_rnorm <- (rnorm(100, mean=20, sd=4))

se(exercise_rnorm)

x <- c(0, -3, 4, -1, 45, 90, -5)

(gtzero <- x[x>0])

(x[x<=-2 | x>5])

(x[x>40 & x<100])

(x[c(4,6)])

(y<-c(4,6))

(x[y])

(x[1:3])

(x[-1])

(x[-c(4, 6)])

(x[-(1:3)])

x <- c(0, -3, 4, -1, 45, 90, -5)
names(x) <- c('s1', 's2', 's3', 's4', 's5', 's6', 's7')
x

(pH <- c(area1=4.5, area2=5.7, area3=9.8, mud=7.2))

pH['mud']

pH[c('area1', 'mud')]

x[-"s1"]

x[s1:s7]

x[c('s1':'s7')]

ph[]

pH

pH[] <- 0
pH

pH<- 0
pH 

#The above returns a variable of 0, whereas the function about that creates an index full of zero values.

m <- c(45, 23, 66, 77, 33, 44, 56, 12, 78, 23)
is.vector(m)
is.matrix(m)
is.array(m)

dim(m) <-c(2, 5)
m

is.vector(m)
is.matrix(m)
is.array(m)

(m <- matrix(c(45, 23, 66, 77, 33, 44, 56, 12, 78, 23), 2, 5, byrow = TRUE))

test <-matrix(c(11, 11, 12, 13, 14, 9, 8, 5, 5, 6, 7, 8, 4, 3), 7, 2)
test

m <- c(45, 23, 66, 77, 33, 44, 56, 12, 78, 23)
dim(m) <- c(2, 5)
m

m[2, 3]

(s<- m[2, 1])

(m<- m [c(1,2), -c(3, 5)])

(m [1, ])

(v<-m [, 1]) # 1st column, result is a vector

is.vector(m)

is.matrix(m)

is.vector(s)

is.vector(v)

is.matrix(v)

m <- matrix(c(45, 23, 66, 77, 33, 44, 56, 12, 78, 23), 2, 5)
(m<-m [, 2, drop = FALSE])

is.matrix(m)
is.vector(m)

cbind (c(1,2,3), c(4, 5, 6))

rbind (c(1,2,3), c(4, 5, 6))

m <- matrix(c(45, 23, 66, 77, 33, 44, 56, 12, 78, 23), 2, 5)
(a <- rbind (c(1,2,3,4,5), m))

is.vector(a)
is.array(a)
is.matrix(a)

m1 <- matrix(rep(10, 9), 3, 3)
m2 <- cbind (c(1,2,3), c(4, 5, 6))
m3 <- cbind (m1[,1], m2[2,])
m4 <- cbind (m1[,1], m2[,2])
m1
m2
m3
m4

sales <- matrix(c(10, 30, 40, 50, 43, 56, 21, 30), 2, 4, byrow=TRUE)
colnames(sales) <- c('1qrt', '2qrt', '3qrt', '4qrt')
rownames(sales) <- c('store1', 'store2')
sales

sales['store1', '1qrt']
sales['store2', c('1qrt', '4qrt')]

a <- array(1:48, dim= c(4, 3, 2))
a

a [1, 3, 2]
a [1, , 2]

a [1, , 2, drop=FALSE]
a [4, 3, ]

a [c(2, 3), , -2]

a [1, 3, 2]

a [1, ,2, drop=FALSE]

a [4, 3, ]

a [c(2,3), , -2]

dimnames(a)[[1]] <-c("1qrt", "2qrt", "3qrt", "4qrt")
dimnames(a)[[2]] <-c("store1", "store2", "store3")
dimnames(a)[[3]] <-c("2017", "2018")
a

ar <- array(data     = 1:27,
            dim      = c(3, 3, 3),
            dimnames = list(c("a", "b", "c"),                                                           c("d", "e", "f"),                                                           c("g", "h", "i")))
ar

matrix1 <- ar[,,g]
matrix1 <- ar[,,'g']
matrix1

matrix2 <- ar[,,'h']
matrix2

sum <-matrix1 + matrix2
sum

matrix1*3

matrix1

matrix1*c(2,3)

matrix1*c(2,3,2,3,2,3,2,3,2)

matrix1*c(1, 2, 3)

matrix1/c(1, 2, 3)

matrix1/c(1, 2, 3, 1, 2, 3, 1, 2, 3)

mylist <- list(stud.id=34453,
               stud.name="John",
               stud.marks= c(13, 3, 12, 15, 19)
               )

mylist$stud.id
mylist[1]
mylist[[1]]
mylist["stud.id"]

handle <- "stud.id"
mylist[handle]

mylist[["stud.id"]]

mylist <- list(stud.id=34453,
               stud.name="John",
               stud.marks= c(13, 3, 12, 15, 19)
               )
mylist$stud.marks

mylist$stud.marks[2]

names(mylist)

names(mylist) <- c('id','name','marks')

mylist

mylist$parents.names <- c('Ana',"Mike")
mylist$parents.names

newlist <- list(age=19, sex="male");
expandedlist <-c(mylist, newlist)
expandedlist

length(expandedlist)

expandedlist <- expandedlist[-5]
expandedlist <- expandedlist[c(-1,-5)]
expandedlist$parents.names <- NULL
expandedlist[['marks']] <- NULL
expandedlist

unlist(mylist)

mode(mylist)

mode(unlist(mylist))

is.vector(unlist(mylist))

is.list(mylist)

is.atomic(mylist)

is.list(unlist(mylist))

my.dataframe <- data.frame(site=c('A', 'B', 'A','A', 'B'),
                           season=c('winter', 'summer', 'summer', 'spring', 'fall'),                               ph = c(7.4, 6.3, 8.6, 7.2, 8.9))
my.dataframe

my.dataframe[3, 2]

my.dataframe[['site']]

my.dataframe['site']

my.dataframe[my.dataframe$ph>7, ]

my.dataframe[my.dataframe$ph>7, 'site']

my.dataframe[my.dataframe$ph>7, c('site', 'ph')]

subset(my.dataframe, ph>7)

subset(my.dataframe, ph>7, c("site", "ph"))

subset(my.dataframe[1:2,], ph>7, c(site,ph))

my.dataframe[my.dataframe$season=='summer', 'ph'] <- 
my.dataframe[my.dataframe$season=='summer', 'ph'] + 1 
                                                                  
my.dataframe[my.dataframe$season=='summer', 'ph']

my.dataframe[my.dataframe$season=='summer' & my.dataframe$ph>8, 'ph'] <- my.dataframe[my.dataframe$season=='summer' & my.dataframe$ph>8, 'ph'] + 1                                                              
        
my.dataframe[my.dataframe$season=='summer', 'ph']

my.dataframe$NO3 <- c(234.5, 123.4, 456.7, 567.8, 789.0)
my.dataframe

my.dataframe <- my.dataframe[, -4]

str(my.dataframe)

nrow(my.dataframe)

ncol(my.dataframe)

dim(my.dataframe)

edit(my.dataframe)
View(my.dataframe)
names(my.dataframe)
names(my.dataframe) <- c('area', 'season', 'P.h.')
my.dataframe

names(my.dataframe)[3] <- 'ph'
my.dataframe 
```
