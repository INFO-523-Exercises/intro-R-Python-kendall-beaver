---
title: "Intro to R/Python"
author: "Kendall Beaver"
format: html
editor: visual
---

```{r}
R.version

help(package="DMwR2")

library(DMwR2)

data(algae)

algae

manyNAs(algae)

library()

(.packages())

library (dbplyr)

(.packages())

detach("package:dbplyr", unload=TRUE)

(.packages())

library(dplyr)

installed.packages()

old.packages()

update.packages()

update.packages(ask = FALSE)

mean

help("mean")

RSiteSearch('neural networks')

save.image()

getwd()

setwd("C:/Users/ual-laptop/Documents/GitHub/intro-R-Python-kendall-beaver")

getwd()

vat <- 0.2

vat

(vat <- 0.2)

x <- 5
y <- vat * x
y

z <-(y/2)^2

y

z

ls()

objects()

rm(vat)

max(4, 5, 6, 12, -4)

mean(4, 5, 6, 12, -4)

max(sample(1:100, 30))

mean(sample(1:100, 30))

set.seed(1)

rnorm(1)

rnorm(1)

set.seed(2)

rnorm(1)

rnorm(1)

exists("se")

se <- function(x){
  variance <- var(x)
  n <-length(x)
  return (sqrt(variance/n))
}

exists("se")

convMeters <- function (x, to="inch"){
  factor = switch(to, inch=39.3701, foot=3.28084, yard=1.09361, mile=0.000621371, NA)
  if(is.na(factor)) stop ("unknown target unit")
  else return (x*factor)
}

convMeters(23, "foot")

convMeters(40)

convMeters(56.2, "yard")

convMeters(to="yard", 56.2)

g <-c('f', 'm', 'f', 'f', 'f', 'm', 'm', 'f')

g <- factor(g)

other.g <-factor(c('m', 'm', 'm', 'm'), levels= c('f', 'm'))

other.g

other.g <-factor(c('m', 'm', 'm', 'm'))

other.g

g <- factor(c('f', 'm', 'f', 'f', 'f', 'm', 'm', 'f'))

table(g)

a <- factor(c('adult', 'juvenile','adult', 'juvenile','adult', 'juvenile','juvenile', 'juvenile'))

table(a, g)

a <- factor(c('adult', 'juvenile','adult', 'juvenile','adult', 'juvenile','juvenile'))

a <- factor(c('adult', 'juvenile','adult', 'juvenile','adult', 'juvenile','juvenile', 'juvenile'))

t <- table(a, g)

t

margin.table(t, 1)

margin.table(t, 2)

t

prop.table(t, 1)

prop.table(t, 2)

prop.table(t)

prop.table(t) * 100

v <- c(2, 5, 3, 4)

v

length(v)

mode(v)

v <- c(2, 5, 3, 4, 'me')

mode(v)

v

v <- c(2, 5, 3, 4, NA)

mode(v)

v

b <- c(TRUE, FALSE, NA, TRUE)

mode(b)

b

b[3]

b[3] <- TRUE

b

b[10] <- FALSE

b

e <-vector()

mode(e)

e <- c()

mode(e)

length(e)

b2 <-c(b[1], b[3], b[5])

b2

sqrt(v)

v1 <- c(3, 6, 9)
v2 <- c(1, 4, 8)
v1+v2

v1*v2

v1-v2

v1/v2

v3 <- c(1, 4)

v1+v3

2*v1

mysum <- function (x){
  sum <- 0
  for(i in 1:length(x)){
    sum <- sum + x[i]
  }
  return (sum)
}

(mysum (c(1, 2, 3)))

(x <-1:10)

(x <-10:1)

10:15-1

10:(15-1)

(seq(from=1, to=5, length=4))

(seq(length=10, from=-2, by=0.5))

(rep(5, 10))

(rep("hi", 3))

(rep(1:2, 3))

gl(3, 5)

gl(2, 5, labels= c('female', 'male'))

gl(2, 1, 20, labels=c('female', 'male'))

n <- rep(1:2, each=3)

(n <- factor(n, 
             levels = c(1, 2),
             labels = c('female','male')
             ))

n

(rnorm(10, mean=10, sd=3))

(rt(10, df=5))

exercise_rnorm <- (rnorm(100, mean=20, sd=4))

se(exercise_rnorm)

x <- c(0, -3, 4, -1, 45, 90, -5)

(gtzero <- x[x>0])

(x[x<=-2 | x>5])

(x[x>40 & x<100])

(x[c(4,6)])

(y<-c(4,6))

(x[y])

(x[1:3])


```
